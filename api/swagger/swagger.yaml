swagger: "2.0"
info:
  version: "0.0.1"
  title: Smart Car API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /swagger:
    x-swagger-pipe: swagger_raw
  /vehicles/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: vehicle_info
    get:
      description: Returns 'Vehicle Information' to the caller
      # used as the method name of the controller
      operationId: vehicleInfo
      parameters:
        - name: id
          in: path
          description: The id of the vehicle whose information has to be found
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/VehicleResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"    
  /vehicles/{id}/doors:
    # binds a127 app logic to a route
    x-swagger-router-controller: security_info
    get:
      description: Returns 'Secruity Information' to the caller
      # used as the method name of the controller
      operationId: securityInfo
      parameters:
        - name: id
          in: path
          description: The id of the vehicle whose information has to be found
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/VehicleResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
  /vehicles/{id}/fuel:
    # binds a127 app logic to a route
    x-swagger-router-controller: energy_info
    get:
      description: Returns 'Fuel Information' to the caller
      # used as the method name of the controller
      operationId: fuelInfo
      parameters:
        - name: id
          in: path
          description: The id of the vehicle whose information has to be found
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/VehicleResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"     
  /vehicles/{id}/battery:
    # binds a127 app logic to a route
    x-swagger-router-controller: energy_info
    get:
      description: Returns 'Fuel Information' to the caller
      # used as the method name of the controller
      operationId: batteryInfo
      parameters:
        - name: id
          in: path
          description: The id of the vehicle whose information has to be found
          required: true
          type: string       
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/VehicleResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"                          
  /vehicles/{id}/engine:
    # binds a127 app logic to a route
    x-swagger-router-controller: engine_info
    post:
      description: Returns 'Engine Information' to the caller
      # used as the method name of the controller
      operationId: engineInfo
      parameters:
        - name: id
          in: path
          description: The id of the vehicle whose information has to be found
          required: true
          type: string
        - name: action
          in: formData
          description: The command which has to be send to the vehicle
          required: true
          type: string   
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/VehicleResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"             
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  VehicleResponse:
    properties:
      message:
        type: object        
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
